{% macro iface_config(iftype, ifnum, settings) -%}
{% set iface = "%s%s"|format(iftype, ifnum) %}
{% if iftype == 'Ethernet' and settings.profile == 'peer' %}
{{ iface_cfg_ethernet_peer(iface, ifnum) }}
{% elif iftype == 'Ethernet' and settings.profile == 'underlay' %}
{{ iface_cfg_ethernet_underlay(iface, settings.options) }}
{% elif iftype == 'Ethernet' and settings.profile == 'oobm' %}
{{ iface_cfg_ethernet_oobm(iface, settings.options) }}
{% elif iftype == 'Ethernet' and settings.profile == 'lacp' %}
{{ iface_cfg_ethernet_lacp(iface, settings.options) }}
{% elif iftype == 'Ethernet' and settings.profile == 'routed' %}
{{ iface_cfg_ethernet_routed(iface, settings.options) }}
{% elif iftype == 'Ethernet' and settings.profile == 'unused' %}
{{ iface_cfg_ethernet_unused(iface, settings.options) }}
{% elif iftype == 'Loopback' and settings.profile == 'underlay' %}
{{ iface_cfg_loopback_underlay(iface, settings.options) }}
{% elif iftype == 'Loopback' and settings.profile == 'management' %}
{{ iface_cfg_loopback_management(iface, settings.options) }}
{% else %}
{{ undef(hint='ASSERTION: unhandled iface profile %s for %s'|format(settings.profile, iface)) }}
{% endif %}
{%- endmacro -%}

{% macro iface_cfg_ethernet_peer_free() %}
   description FREE UNASSIGNED
   shutdown
   mac access-group block in
   no lldp transmit
   no lldp receive
   storm-control broadcast level 0.01
   storm-control multicast level 0.01
   storm-control unknown-unicast level 0.01
{%- endmacro -%}

{% macro iface_cfg_ethernet_peer_peering(ifnum, status, peer) %}
   description {{ status.label }} AS{{ peer.asn }} {{ peer.slug }}
   switchport access vlan 600
   ip access-group peer-eth{{ ifnum }}-ipv4 in
   ipv6 access-group peer-eth{{ ifnum }}-ipv6 in
   mac access-group peer-eth{{ ifnum }} in
   no lldp transmit
   no lldp receive
   sflow enable
   storm-control broadcast level 0.01
   storm-control multicast level 0.01
   storm-control unknown-unicast level 0.01
{%- endmacro -%}

{% macro iface_cfg_ethernet_peer_quarantine(ifnum, status, peer) %}
   description {{ status.label }} AS{{ peer.asn }} {{ peer.slug }}
   switchport access vlan 666
   mac access-group peer-eth{{ ifnum }} in
   no lldp transmit
   no lldp receive
   storm-control broadcast level 0.01
   storm-control multicast level 0.01
   storm-control unknown-unicast level 0.01
{%- endmacro -%}

{% macro iface_cfg_ethernet_peer_shutdown(ifnum, status, peer) %}
   description {{ status.label }} AS{{ peer.asn }} {{ peer.slug }}
   shutdown
   switchport access vlan 666
   mac access-group peer-eth{{ ifnum }} in
   no lldp transmit
   no lldp receive
   storm-control broadcast level 0.01
   storm-control multicast level 0.01
   storm-control unknown-unicast level 0.01
{%- endmacro -%}

{% macro iface_cfg_ethernet_peer(iface, ifnum) -%}
{% set peers = ixp_manager_peers|selectattr('switchport', 'equalto', iface)|selectattr('switchname', 'equalto', switch_vars.ixp_manager_lookup) %}
interface {{ iface }}
{% set len = peers|count %}
{% if len == 0 %}
{{ iface_cfg_ethernet_peer_free() }}
{% elif len == 1 %}
{% set peer = peers|first %}
{% set status = ixp_manager_portstatus[peer.status] %}
{% if status.profile == "peering" %}
{{ iface_cfg_ethernet_peer_peering(ifnum, status, peer) }}
{% elif status.profile == "shutdown" %}
{{ iface_cfg_ethernet_peer_shutdown(ifnum, status, peer) }}
{% elif status.profile == "quarantine" %}
{{ iface_cfg_ethernet_peer_quarantine(ifnum, status, peer) }}
{% else %}
{{ undef(hint='ASSERTION: unhandled portstatus profile %s'|format(status.profile)) }}
{% endif %}
{% else %}
{{ undef(hint='ASSERTION: found more than a single peer for iface %s'|format(iface)) }}
{% endif %}
{%- endmacro -%}

{% macro iface_cfg_ethernet_underlay(iface, opts) -%}
interface {{ iface }}
   description {{ opts.description }}
   mtu 9214
   no switchport
   ip address {{ opts.ipv4 }}
   ipv6 address {{ opts.ipv6 }}
   ipv6 address {{ opts.lladdr }} link-local
   ipv6 nd ra disabled
   isis enable backbone
{%- endmacro -%}

{% macro iface_cfg_ethernet_oobm(iface, opts) -%}
interface {{ iface }}
   description {{ opts.description }}
   switchport access vlan {{ opts.vlan }}
{%- endmacro -%}

{% macro iface_cfg_ethernet_lacp(iface, opts) -%}
interface {{ iface }}
   description {{ opts.description }}
   channel-group {{ opts.channel_group }} mode active
   lacp timer fast
{%- endmacro -%}

{% macro iface_cfg_ethernet_routed(iface, opts) -%}
interface {{ iface }}
   description {{ opts.description }}
   no switchport
   vrf {{ opts.vrf }}
   ipv6 address {{ opts.ipv6 }}
   ipv6 address {{ opts.lladdr }} link-local
   ipv6 nd ra disabled
{%- endmacro -%}

{% macro iface_cfg_ethernet_unused(iface, opts) -%}
interface {{ iface }}
   description UNUSED
   shutdown
{%- endmacro -%}

{% macro iface_cfg_loopback_underlay(iface, opts) -%}
interface {{ iface }}
   description {{ opts.description }}
   ip address {{ opts.ipv4 }}
   ipv6 address {{ opts.ipv6 }}
   isis enable backbone
   isis passive
{%- endmacro -%}

{% macro iface_cfg_loopback_management(iface, opts) -%}
interface {{ iface }}
   description {{ opts.description }}
   vrf inband-mgmt
   ipv6 address {{ opts.ipv6 }}
{%- endmacro -%}



{% macro mac_acl_peer(ifnum) -%}
{% set iface = "Ethernet%d"|format(ifnum) %}
{% set peers = ixp_manager_peers|selectattr('switchport', 'equalto', iface)|selectattr('switchname', 'equalto', switch_vars.ixp_manager_lookup) %}
{% set len = peers|count %}
{% if len == 1 %}
{% set peer = peers|first %}
mac access-list peer-eth{{ ifnum }}
{% if peer.l2address %}
   10 remark AS{{ peer.asn }} allow arp broadcast
   11 permit {{ peer.l2address|ansible.utils.hwaddr('linux') }} 00:00:00:00:00:00 ff:ff:ff:ff:ff:ff 00:00:00:00:00:00 arp
   20 remark AS{{ peer.asn }} allow nd multicast
   21 permit {{ peer.l2address|ansible.utils.hwaddr('linux') }} 00:00:00:00:00:00 33:33:ff:00:00:00 00:00:00:ff:ff:ff ipv6
{% else %}
   10 remark AS{{ peer.asn }} allow arp broadcast
   11 permit any ff:ff:ff:ff:ff:ff 00:00:00:00:00:00 arp
   20 remark AS{{ peer.asn }} allow nd multicast
   21 permit any 33:33:ff:00:00:00 00:00:00:ff:ff:ff ipv6
{% endif %}
   30 remark AS{{ peer.asn }} drop other broadcasts or multicasts
   31 deny any 01:00:00:00:00:00 fe:ff:ff:ff:ff:ff log
{% if peer.l2address %}
   40 remark AS{{ peer.asn }} allow peering lan access
   41 permit {{ peer.l2address|ansible.utils.hwaddr('linux') }} 00:00:00:00:00:00 any arp
   42 permit {{ peer.l2address|ansible.utils.hwaddr('linux') }} 00:00:00:00:00:00 any ip
   43 permit {{ peer.l2address|ansible.utils.hwaddr('linux') }} 00:00:00:00:00:00 any ipv6
{% else %}
   40 remark AS{{ peer.asn }} peer has no l2address
   41 permit any any
{% endif %}
   100 remark AS{{ peer.asn }} drop any
   101 deny any any log
!
{% elif len != 0 %}
{{ undef(hint='ASSERTION: found more than a single peer for iface %s'|format(iface)) }}
{% endif %}
{%- endmacro -%}



{% macro ip_acl_peer(ifnum) -%}
{% set iface = "Ethernet%d"|format(ifnum) %}
{% set peers = ixp_manager_peers|selectattr('switchport', 'equalto', iface)|selectattr('switchname', 'equalto', switch_vars.ixp_manager_lookup) %}
{% set len = peers|count %}
{% if len == 1 %}
{% set peer = peers|first %}
ip access-list peer-eth{{ ifnum }}-ipv4
{% if peer.ipv4address %}
   10 remark AS{{ peer.asn }} allow router IP
   11 permit {% if acl_supports_vlan|default(true) %}vlan 600 0x000 {% endif %}ip host {{ peer.ipv4address }} any
{% else %}
   10 remark AS{{ peer.asn }} peer has no ipv4address
{% endif %}
   20 remark AS{{ peer.asn }} deny IP abuse
   21 deny {% if acl_supports_vlan|default(true) %}vlan 600 0x000 {% endif %}ip 193.201.151.64/26 193.201.151.64/26 log
   100 remark allow any other traffic
   101 permit ip any any
!
{% elif len != 0 %}
{{ undef(hint='ASSERTION: found more than a single peer for iface %s'|format(iface)) }}
{% endif %}
{%- endmacro -%}



{% macro ipv6_acl_peer(ifnum) -%}
{% set iface = "Ethernet%d"|format(ifnum) %}
{% set peers = ixp_manager_peers|selectattr('switchport', 'equalto', iface)|selectattr('switchname', 'equalto', switch_vars.ixp_manager_lookup) %}
{% set len = peers|count %}
{% if len == 1 %}
{% set peer = peers|first %}
ipv6 access-list peer-eth{{ ifnum }}-ipv6
   10 remark AS{{ peer.asn }} IPv6 multicast
   11 permit ipv6 any host ff02::1
   12 permit ipv6 any host ff02::2
   13 permit ipv6 any host ff02::16
   14 permit ipv6 any ff02::1:ff00:0/104
   15 deny ipv6 any ff00::/8 log
{% if peer.ipv6address %}
   20 remark AS{{ peer.asn }} allow router IPv6
   21 permit {% if acl_supports_vlan|default(true) %}vlan 600 0x000 {% endif %}ipv6 host {{ peer.ipv6address }} any
{% else %}
   20 remark AS{{ peer.asn }} peer has no ipv6address
{% endif %}
   30 remark AS{{ peer.asn }} deny IPv6 abuse
   31 deny {% if acl_supports_vlan|default(true) %}vlan 600 0x000 {% endif %}ipv6 2001:7f8:79::/64 2001:7f8:79::/64 log
   100 remark allow any other traffic
   101 permit ipv6 any any
!
{% elif len != 0 %}
{{ undef(hint='ASSERTION: found more than a single peer for iface %s'|format(iface)) }}
{% endif %}
{%- endmacro -%}



{% macro mac_address_table() -%}
{% for peer in ixp_manager_peers|selectattr('switchname', 'equalto', switch_vars.ixp_manager_lookup)|rejectattr('l2address', 'equalto', None)|sort(attribute='l2address') %}
mac address-table static {{ peer.l2address|ansible.utils.hwaddr('cisco') }} vlan 600 interface {{ peer.switchport }}{% if mac_acl_trailing_space|default(false) %} {% endif +%}
{% endfor %}
{%- endmacro -%}
